/* Generated by wbuild from "FText.w"
** (generator version $Revision$ of $Date$)
*/
#ifndef _XfwfFormattedTextP_H_
#define _XfwfFormattedTextP_H_
#include <Xm/ManagerP.h>
#include <Xfwf/FText.h>
_XFUNCPROTOBEGIN
#define NR_FAMILIES 5 


#define NR_STYLES 4 


#define NR_SIZES 7 


#define SHRINK 0.6 


typedef enum {
	    FtWord, FtHSpace, FtInline, FtVSpace, FtParShape, FtHRule
	} FtType;
typedef struct {
	    TextStyle style;			/* Size & style flags */
	    Pixel fg, bg;			/* Colors */
	    String text;			/* NUL-terminated */
	    int len;				/* # of characters */
	    Font fid;				/* Font ID */
	} FtWordChunk;
typedef struct {
	    TextStyle style;			/* Size & style flags */
	    Pixel fg, bg;			/* Colors */
	    int normwidth;			/* Unstretched width */
	    Bool stretchable;			/* Stretchable? */
	    Bool breakable;			/* Valid breakpoint? */
	} FtHSpaceChunk;
typedef struct {
	    TextStyle style;			/* Size & style flags */
	    Widget widget;			/* The embedded widget */
	    Bool mapped;			/* Widget is mapped? */
	    int hmargin, vmargin;		/* Extra pixels around obj. */
	    struct _FtChunk *prev_inlined;	/* List of inlines only */
	} FtInlineChunk;
typedef struct {
	    int left, right, width;		/* Margins */
	    int mode;				/* Type of paragraph */
	    float leading;			/* 1.0 is normal line height */
	} FtParShapeChunk;
typedef struct _FtChunk {
	    FtType tp;				/* Type of chunk */
	    struct _FtChunk *next, *prev;	/* Doubly linked list */
	    int x, y, w, h, d, raise;		/* Position & size */
	    XtPointer data;			/* Callback data */
	    union {
		FtWordChunk word;
		FtHSpaceChunk hspace;
		FtInlineChunk inlined;
		FtParShapeChunk parshape;
	    } u;
	}* FtChunk;
typedef struct {
	    int x, y, w, h;
	    FtChunk start, stop;
	} FtLine;
typedef struct {
	    XFontStruct *fs;
	    int sup, sub, ulpos;		/* Positions */
	    int ulthick;			/* Underline thickness */
	    int space;				/* Normal space */
	    int em;				/* One quad */
	} FontInfo;
typedef enum {NormalPara, LeftFloat, RightFloat} ParaType;
typedef void (*add_word_Proc)(
#if NeedFunctionPrototypes
Widget,const  String ,Cardinal ,Pixel ,Pixel ,TextStyle ,XtPointer 
#endif
);
#define XtInherit_add_word ((add_word_Proc) _XtInherit)
typedef void (*add_hspace_Proc)(
#if NeedFunctionPrototypes
Widget,int ,Bool ,Bool ,Pixel ,Pixel ,TextStyle ,XtPointer 
#endif
);
#define XtInherit_add_hspace ((add_hspace_Proc) _XtInherit)
typedef void (*add_vspace_Proc)(
#if NeedFunctionPrototypes
Widget,int 
#endif
);
#define XtInherit_add_vspace ((add_vspace_Proc) _XtInherit)
typedef void (*add_inline_Proc)(
#if NeedFunctionPrototypes
Widget,Widget ,TextStyle ,int ,int ,int ,int ,int ,XtPointer 
#endif
);
#define XtInherit_add_inline ((add_inline_Proc) _XtInherit)
typedef void (*add_parshape_Proc)(
#if NeedFunctionPrototypes
Widget,int ,int ,int ,int ,double 
#endif
);
#define XtInherit_add_parshape ((add_parshape_Proc) _XtInherit)
typedef void (*add_hrule_Proc)(
#if NeedFunctionPrototypes
Widget
#endif
);
#define XtInherit_add_hrule ((add_hrule_Proc) _XtInherit)
typedef void (*add_eod_Proc)(
#if NeedFunctionPrototypes
Widget
#endif
);
#define XtInherit_add_eod ((add_eod_Proc) _XtInherit)
typedef void (*pass_click_Proc)(
#if NeedFunctionPrototypes
Widget,Widget ,int ,int 
#endif
);
#define XtInherit_pass_click ((pass_click_Proc) _XtInherit)
typedef void (*reformat_scrollbar_Proc)(
#if NeedFunctionPrototypes
Widget
#endif
);
#define XtInherit_reformat_scrollbar ((reformat_scrollbar_Proc) _XtInherit)
typedef int  (*get_em_of_textstyle_Proc)(
#if NeedFunctionPrototypes
Widget,TextStyle 
#endif
);
#define XtInherit_get_em_of_textstyle ((get_em_of_textstyle_Proc) _XtInherit)
typedef int  (*get_space_of_textstyle_Proc)(
#if NeedFunctionPrototypes
Widget,TextStyle 
#endif
);
#define XtInherit_get_space_of_textstyle ((get_space_of_textstyle_Proc) _XtInherit)
typedef void (*get_lineheight_of_textstyle_Proc)(
#if NeedFunctionPrototypes
Widget,TextStyle ,int *,int *
#endif
);
#define XtInherit_get_lineheight_of_textstyle ((get_lineheight_of_textstyle_Proc) _XtInherit)
typedef void (*get_word_extent_Proc)(
#if NeedFunctionPrototypes
Widget,const  String ,Cardinal ,TextStyle ,int *,int *,int *,int *
#endif
);
#define XtInherit_get_word_extent ((get_word_extent_Proc) _XtInherit)
typedef struct {
/* Constraint resources */
/* Private constraint variables */
int dummy;
} XfwfFormattedTextConstraintPart;

typedef struct _XfwfFormattedTextConstraintRec {
XmManagerConstraintPart xmManager;
XfwfFormattedTextConstraintPart xfwfFormattedText;
} XfwfFormattedTextConstraintRec;


typedef struct {
/* methods */
add_word_Proc add_word;
add_hspace_Proc add_hspace;
add_vspace_Proc add_vspace;
add_inline_Proc add_inline;
add_parshape_Proc add_parshape;
add_hrule_Proc add_hrule;
add_eod_Proc add_eod;
pass_click_Proc pass_click;
reformat_scrollbar_Proc reformat_scrollbar;
get_em_of_textstyle_Proc get_em_of_textstyle;
get_space_of_textstyle_Proc get_space_of_textstyle;
get_lineheight_of_textstyle_Proc get_lineheight_of_textstyle;
get_word_extent_Proc get_word_extent;
/* class variables */
} XfwfFormattedTextClassPart;

typedef struct _XfwfFormattedTextClassRec {
CoreClassPart core_class;
CompositeClassPart composite_class;
ConstraintClassPart constraint_class;
XmManagerClassPart xmManager_class;
XfwfFormattedTextClassPart xfwfFormattedText_class;
} XfwfFormattedTextClassRec;

typedef struct {
/* resources */
String  fontFamily1;
String  fontCharset1;
String  fontSlant1;
String  fontBold1;
String  fontSizes1;
String  fontFamily2;
String  fontCharset2;
String  fontSlant2;
String  fontBold2;
String  fontSizes2;
String  fontFamily3;
String  fontCharset3;
String  fontSlant3;
String  fontBold3;
String  fontSizes3;
String  fontFamily4;
String  fontCharset4;
String  fontSlant4;
String  fontBold4;
String  fontSizes4;
String  fontFamily5;
String  fontCharset5;
String  fontSlant5;
String  fontBold5;
String  fontSizes5;
XtCallbackList  activate;
XtCallbackList  enter;
XtCallbackList  leave;
Cursor  activeCursor;
/* private state */
FtChunk  chunks;
FtChunk  last;
FtChunk  inlined_chunks;
FtLine * lines;
int  nrlines;
int  nrlines_alloc;
FtLine * leftlines;
int  nrleftlines;
int  nrleftlines_alloc;
FtLine * rightlines;
int  nrrightlines;
int  nrrightlines_alloc;
FontInfo  fonts[NR_FAMILIES][NR_STYLES][NR_SIZES];
int  fsizes[NR_FAMILIES][NR_SIZES];
GC  linegc;
GC  gc;
GC  spacegc;
Widget  vscrollbar;
int  voffset;
FtChunk  last_motion_chunk;
XtWorkProcId  workid;
int  fullwidth;
int  ypos;
int  vspace;
int  leftypos;
int  leftvspace;
int  rightypos;
int  rightvspace;
FtChunk  next_to_render;
} XfwfFormattedTextPart;

typedef struct _XfwfFormattedTextRec {
CorePart core;
CompositePart composite;
ConstraintPart constraint;
XmManagerPart xmManager;
XfwfFormattedTextPart xfwfFormattedText;
} XfwfFormattedTextRec;

externalref XfwfFormattedTextClassRec xfwfFormattedTextClassRec;

_XFUNCPROTOEND
#endif /* _XfwfFormattedTextP_H_ */
